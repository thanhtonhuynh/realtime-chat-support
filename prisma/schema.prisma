generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String        @id @default(cuid())
  name          String
  username      String        @unique
  email         String        @unique
  emailVerified Boolean       @default(false)
  role          String        @default("user")
  accountStatus String        @default("active")
  passwordHash  String?
  image         String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  conversation  Conversation?
  messages      Message[]
  sessions      Session[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Conversation {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customerId String   @unique
  createdAt  DateTime @default(now()) @db.Timestamptz(6)
  updatedAt  DateTime @updatedAt @db.Timestamptz(6)

  customer User      @relation(fields: [customerId], references: [id], onDelete: Cascade)
  messages Message[]
}

model Message {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  conversationId String   @db.Uuid
  senderId       String
  isRead         Boolean  @default(false)
  content        String
  // image          String?
  createdAt      DateTime @default(now()) @db.Timestamptz(6)
  // updatedAt      DateTime @default(now()) @db.Timestamptz(6)

  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  sender       User         @relation(fields: [senderId], references: [id], onDelete: Cascade)
}
